load("@wfa_rules_kotlin_jvm//kotlin:defs.bzl", "kt_jvm_library")
load("@rules_java//java:defs.bzl", "java_binary")
load("//src/main/docker:macros.bzl", "java_image")
load("//src/main/docker:macros.bzl", "java_debug_image")

package(
    default_testonly = True,
    default_visibility = ["//visibility:public"],
)

kt_jvm_library(
    name = "results_fulfiller",
    srcs = ["ResultsFulfiller.kt"],
    deps = [
        ":measurement_results",
        "//src/main/kotlin/org/wfanet/measurement/api/v2alpha:packed_messages",
        "//src/main/kotlin/org/wfanet/measurement/api/v2alpha:resource_key",
        "//src/main/kotlin/org/wfanet/measurement/eventdataprovider/eventfiltration:event_filters",
        "//src/main/kotlin/org/wfanet/measurement/eventdataprovider/noiser",
        "//src/main/proto/wfa/measurement/api/v2alpha:measurement_spec_kt_jvm_proto",
        "//src/main/proto/wfa/measurement/api/v2alpha:requisitions_service_kt_jvm_grpc_proto",
        "//src/main/proto/wfa/measurement/api/v2alpha/event_templates/testing:test_event_kt_jvm_proto",
        "//src/main/proto/wfa/measurement/edpaggregator/v1alpha:blob_details_kt_jvm_proto",
        "//src/main/proto/wfa/measurement/edpaggregator/v1alpha:labeled_impression_kt_jvm_proto",
        "@any_sketch_java//src/main/java/org/wfanet/sampling",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/storage:mesos_recordio_storage_client",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/storage:selected_storage_client",
        "@wfa_consent_signaling_client//src/main/kotlin/org/wfanet/measurement/consent/client/dataprovider",
        "@wfa_consent_signaling_client//src/main/kotlin/org/wfanet/measurement/consent/client/measurementconsumer",
    ],
)

kt_jvm_library(
    name = "results_fulfiller_app",
    srcs = ["ResultsFulfillerApp.kt"],
    deps = [
        ":results_fulfiller",
        "//src/main/kotlin/org/wfanet/measurement/common/identity:principal_identity",
        "//src/main/kotlin/org/wfanet/measurement/securecomputation/controlplane/v1alpha:work_item_attempts_service",
        "//src/main/kotlin/org/wfanet/measurement/securecomputation/controlplane/v1alpha:work_items_service",
        "//src/main/kotlin/org/wfanet/measurement/securecomputation/teesdk:base_tee_application",
        "//src/main/proto/wfa/measurement/edpaggregator/v1alpha:results_fulfiller_params_kt_jvm_proto",
        "//src/main/proto/wfa/measurement/securecomputation/controlplane/v1alpha:work_item_kt_jvm_proto",
        "@wfa_common_jvm//imports/java/com/google/protobuf",
        "@wfa_common_jvm//imports/kotlin/kotlinx/coroutines:core",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/queue:queue_subscriber",
    ],
)

kt_jvm_library(
    name = "results_fulfiller_app_impl",
    srcs = ["ResultsFulfillerAppImpl.kt"],
    deps = [
        ":results_fulfiller_app",
        "//imports/java/com/google/crypto/tink/integration/gcpkms",
    ],
)

kt_jvm_library(
    name = "measurement_results",
    srcs = ["MeasurementResults.kt"],
    deps = [
        "//imports/java/org/projectnessie/cel",
        "@wfa_common_jvm//imports/java/com/google/protobuf",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/common",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/common/grpc",
    ],
)

kt_jvm_library(
    name = "results_fulfiller_app_runner",
    srcs = ["ResultsFulfillerAppRunner.kt"],
    deps = [
        ":results_fulfiller_app_impl",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/gcloud/pubsub:google_pub_sub_client",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/gcloud/pubsub:publisher",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/gcloud/pubsub:subscriber",
    ],
)

java_binary(
    name = "EdpResultsFulfiller",
    main_class = "org.wfanet.measurement.edpaggregator.resultsfulfiller.ResultsFulfillerAppRunner",
    runtime_deps = [
        ":results_fulfiller_app_runner",
    ],
)

java_image(
    name = "edp_results_fulfiller_image",
    base = "@java_debug_root",
    binary = ":EdpResultsFulfiller",
    main_class = "org.wfanet.measurement.edpaggregator.resultsfulfiller.ResultsFulfillerAppRunner",
    visibility = ["//src:docker_image_deployment"],
)
