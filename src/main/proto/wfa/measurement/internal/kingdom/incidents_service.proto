// Copyright 2024 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.internal.kingdom;

import "google/protobuf/timestamp.proto";
import "wfa/measurement/internal/kingdom/incident.proto";

option java_package = "org.wfanet.measurement.internal.kingdom";
option java_multiple_files = true;

// Internal service for persistence of Incident entities.
service Incidents {
  rpc CreateIncident(CreateIncidentRequest) returns (Incident);

  rpc GetIncident(GetIncidentRequest) returns (Incident);

  rpc ListIncidents(ListIncidentsRequest) returns (ListIncidentsResponse);
}

message CreateIncidentRequest {
  Incident incident = 1;
}

message GetIncidentRequest {
  fixed64 external_incident_id = 1;
  fixed64 external_data_provider_id = 2;
}

message ListIncidentsRequest {
  message Filter {
    fixed64 external_data_provider_id = 1;
    google.protobuf.Timestamp latest_association_after = 2;
  }
  Filter filter = 1;
  int32 limit = 2;
}

message ListIncidentsResponse {
  // The `Incident` resources. Ordered by `create_time` descending.
  repeated Incident incidents = 1;
}
