// Copyright 2025 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.edpaggregator.v1alpha;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";

option java_package = "org.wfanet.measurement.edpaggregator.v1alpha";
option java_multiple_files = true;
option java_outer_classname = "ResultsFulfillerParamsProto";

// Message representing the params used for the results fulfiller tee app
message ResultsFulfillerParams {
  // Message representing the storage details used by the results fulfiller app
  message StorageDetails {
    // The blob uri prefix for the labeled impressions `BlobDetails` that is
    // stored in GCS for a given EDP
    string labeled_impressions_blob_details_uri_prefix = 1
        [(google.api.field_behavior) = REQUIRED];

    // The optional project ID for the requisitions GCS instance that can be
    // used with a blob URI to retrieve the storage client using
    // SelectedStorageClient
    // See reference:
    // https://github.com/world-federation-of-advertisers/common-jvm/blob/main/src/main/kotlin/org/wfanet/measurement/storage/SelectedStorageClient.kt
    string requisitions_storage_project_id = 2;

    // The optional project ID for the labeled impression metadata GCS instance
    // that can be used with a blob URI to retrieve the storage client using
    // SelectedStorageClient
    // See reference:
    // https://github.com/world-federation-of-advertisers/common-jvm/blob/main/src/main/kotlin/org/wfanet/measurement/storage/SelectedStorageClient.kt
    string labeled_impression_metadata_storage_project_id = 3;

    // The optional project ID for the labeled impression GCS instance that can
    // be used with a blob URI to retrieve the storage client using
    // SelectedStorageClient
    // See reference:
    // https://github.com/world-federation-of-advertisers/common-jvm/blob/main/src/main/kotlin/org/wfanet/measurement/storage/SelectedStorageClient.kt
    string labeled_impression_storage_project_id = 4;
  }

  StorageDetails storage_details = 1 [(google.api.field_behavior) = REQUIRED];

  // Message representing the details needed to generate certificates
  message ConsentDetails {
    // The DER-encoded certificate file used for result signing
    bytes result_cs_cert_der = 1 [(google.api.field_behavior) = REQUIRED];

    // The DER-encoded private key file used for result signing
    bytes result_cs_private_key_der = 2
        [(google.api.field_behavior) = REQUIRED];

    // The private encryption key file
    bytes private_encryption_key = 3 [(google.api.field_behavior) = REQUIRED];

    // The name for the certificate used by the EDP
    string edp_certificate_name = 4 [
      (google.api.resource_reference).type = "halo.wfanet.org/Certificate",
      (google.api.field_behavior) = REQUIRED
    ];
  }

  ConsentDetails consent_details = 2 [(google.api.field_behavior) = REQUIRED];

  // Message representing the details needed to connect to the kingdom
  message ConnectionDetails {
    // The client certificate
    bytes client_cert = 1 [(google.api.field_behavior) = REQUIRED];

    // The client private key
    bytes client_private_key = 2
        [(google.api.field_behavior) = REQUIRED];
  }

  ConnectionDetails connection_details = 3
      [(google.api.field_behavior) = REQUIRED];
}
